import logging
import pandas as pd
from flask import Flask, request, redirect, url_for
from typing import Any, Dict


from {{ src }}.{{ model_module }} import {{ model_class }}

logger = logging.getLogger(__name__)
app = Flask(__name__)


model = {{ model_class }}()


@app.route("/", methods=["GET"])
def index() -> str:
    """
    Predict endpoint.
    Returns:
        Output of request. A json containing either the field `classification`
        or `error` in case of an error.
    """
    return "AUTO GENERATED FLASK ENDPOINT"

@app.route("/predict", methods=["POST"])
def predict() -> Dict[str, Any]:
    """
    Predict endpoint.
    Returns:
        Output of request. A json containing either the field `classification`
        or `error` in case of an error.
    """
    try:
        input = request.json
        data = pd.DataFrame(input, index=[0])
        return {"prediction": str(model.predict(data)[0])}
    except Exception as err:
        return {"error": err}


@app.route("/schema", methods=['GET'])
def schema()-> Dict[str,Any]:
    """
    Schema endpoint
    Returns:
        The schema for the predict method
    """

    return {"input_schema" : {{ input_schema }} }


{% if metadata is defined %}
@app.route("/metadata", methods=['GET'])
def metadata() -> Dict[str,Any]:
    """
    Metadata endpoint
    Returns:
        Metadata of the model that is used for predicting.
    """
    return {"metadata" : {{ metadata }} }
{% endif %}


@app.errorhandler(404)
def page_not_found(e):
    return redirect(url_for("index"))

if __name__ == "__main__":
    app.run(host="0.0.0.0", debug=True)
